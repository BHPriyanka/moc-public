# This is the kickstart file we use to install centos on newly allocated
# nodes. The only peice that needs to be changed to use this is the censored
# <<encrypted-root-password>>.

# clear all existing partitions. This gives us a known state to work with.
clearpart --all --drives=sda

# set up the disk; This is mostly copied from what we got by doing a
# manual install with automated partitioning ("use whole disk").
part /boot --fstype=ext4 --size=500
part pv.008002 --grow --size=1
volgroup vg_moccompute --pesize=4096 pv.008002
logvol swap --recommended --name lv_swap --vgname vg_moccompute
logvol / --fstype=ext4 --name lv_root --vgname=vg_moccompute --grow --size=1

# set up the network
network --onboot yes --device eth1 --bootproto dhcp

# red hat docs say these options are required:
authconfig --useshadow --pasalgo=sha512
bootloader --location=mbr
keyboard us
lang en_US
rootpw --iscrypted <<encrypted-root-password>>
timezone --utc US/Eastern

# we want the machine to reboot on it's own when finished with installation:
reboot

# we do *not* want to be prompted for anything; if we need to be, installation should fail:
cmdline

# set up repositories
url --url http://mirrors.mit.edu/centos/6.4/os/x86_64

%packages
@core
@server-policy

%post

# the install doesn't provide the chroot with `/etc/resolv.conf`. Let's point
# ourselves at moc-dns.
cat > /etc/resolv.conf << "EOF"
nameserver 192.168.3.248
EOF

# We want to make sure the clock is right; puppet will fail otherwise. This
# will do any initial adjustment:
ntpd -g -q
# While we're at it, set it up to start on boot as well:
chkconfig ntpd on

# add extra repos we need; puppet, rdo, epel.
rpm -ivh http://yum.puppetlabs.com/el/6/products/i386/puppetlabs-release-6-6.noarch.rpm
yum install -y http://rdo.fedorapeople.org/openstack/openstack-grizzly/rdo-release-grizzly.rpm
rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm

# install puppet
yum install -y puppet

# For puppet to work, we need to be able to resolve both ourselves, and the
# puppet master. Here we're relying on the head node (which is also the puppet
# master) to be configured with the given ip.  Also note that the DNS name
# MUST match the hostname.  Our hostname is vlan-head, currently, so that is
# what we'll put here.
cat >> /etc/hosts << EOF
127.0.1.1 $(hostname).moc.bu.edu
192.168.10.254 vlan-head.moc.bu.edu
EOF

# Configure puppet
cat >> /etc/puppet/puppet.conf << "EOF"
    server = vlan-head.moc.bu.edu
    report = true
    pluginsync = true
EOF

# Send a cert request to the puppet master.
puppet agent -t

# Inform the pxe server that we're done installing; the server will then set
# us up to chainload to the disk when we reboot.
curl -X GET http://192.168.10.254/boot-default/?mac=$(ip link show eth0|grep link/ether|awk '{print $2}')
